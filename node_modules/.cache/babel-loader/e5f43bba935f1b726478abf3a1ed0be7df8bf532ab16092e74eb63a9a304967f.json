{"ast":null,"code":"import _objectSpread from\"/workspaces/achiver-admin/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import{db}from\"../firebase\";// Firebase configuration\nimport{collection,addDoc,doc,setDoc}from\"firebase/firestore\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddQuizPage=()=>{const[topic,setTopic]=useState(\"\");// Topic input field\nconst[bulkData,setBulkData]=useState(\"\");// For batch upload\n// Handle bulk quiz data upload\nconst handleBulkSubmit=async()=>{try{// Parse the input data as JSON\nconst quizzes=JSON.parse(bulkData);// Loop through each quiz and add it to the Firestore under the topic document\nconst topicRef=doc(db,\"topics\",topic);// Topic collection and document\nconst updatedQuizzes=quizzes.map(quiz=>_objectSpread(_objectSpread({},quiz),{},{topic// Add topic to each quiz\n}));// Create or update the topic document and add quizzes to the \"questions\" field\nawait setDoc(topicRef,{quizzes:updatedQuizzes},{merge:true});alert(\"All quizzes added successfully!\");setBulkData(\"\");// Clear input after successful upload\n}catch(error){alert(\"Error adding quizzes: \"+error.message);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen flex flex-col items-center justify-center bg-gray-100 space-y-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 shadow-lg rounded-lg w-full max-w-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-4\",children:\"Select Topic\"}),/*#__PURE__*/_jsx(\"label\",{className:\"block mb-2\",children:\"Topic\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:topic,onChange:e=>setTopic(e.target.value),className:\"w-full border p-2 rounded\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 shadow-lg rounded-lg w-full max-w-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-4\",children:\"Bulk Upload Quizzes\"}),/*#__PURE__*/_jsx(\"label\",{className:\"block mb-2\",children:\"JSON Script (Array of Quizzes)\"}),/*#__PURE__*/_jsx(\"textarea\",{value:bulkData,onChange:e=>setBulkData(e.target.value),placeholder:\"[{\\\"question\\\": \\\"Sample?\\\", \\\"optionA\\\": \\\"A\\\", \\\"optionB\\\": \\\"B\\\", \\\"optionC\\\": \\\"C\\\", \\\"optionD\\\": \\\"D\\\", \\\"correctAnswer\\\": \\\"A\\\", \\\"language\\\": \\\"English\\\", \\\"duration\\\": \\\"1:00\\\", \\\"passingMarks\\\": 50}]\",className:\"w-full border p-2 rounded\",rows:\"10\",required:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleBulkSubmit,className:\"mt-6 bg-green-600 text-white p-2 w-full rounded hover:bg-green-700\",children:\"Upload Bulk Quizzes\"})]})]});};export default AddQuizPage;","map":{"version":3,"names":["React","useState","db","collection","addDoc","doc","setDoc","jsx","_jsx","jsxs","_jsxs","AddQuizPage","topic","setTopic","bulkData","setBulkData","handleBulkSubmit","quizzes","JSON","parse","topicRef","updatedQuizzes","map","quiz","_objectSpread","merge","alert","error","message","className","children","type","value","onChange","e","target","required","placeholder","rows","onClick"],"sources":["/workspaces/achiver-admin/src/pages/AddQuizPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { db } from \"../firebase\"; // Firebase configuration\r\nimport { collection, addDoc, doc, setDoc } from \"firebase/firestore\";\r\n\r\nconst AddQuizPage = () => {\r\n  const [topic, setTopic] = useState(\"\"); // Topic input field\r\n  const [bulkData, setBulkData] = useState(\"\"); // For batch upload\r\n\r\n  // Handle bulk quiz data upload\r\n  const handleBulkSubmit = async () => {\r\n    try {\r\n      // Parse the input data as JSON\r\n      const quizzes = JSON.parse(bulkData);\r\n      // Loop through each quiz and add it to the Firestore under the topic document\r\n      const topicRef = doc(db, \"topics\", topic); // Topic collection and document\r\n\r\n      const updatedQuizzes = quizzes.map((quiz) => ({\r\n        ...quiz,\r\n        topic, // Add topic to each quiz\r\n      }));\r\n\r\n      // Create or update the topic document and add quizzes to the \"questions\" field\r\n      await setDoc(topicRef, { quizzes: updatedQuizzes }, { merge: true });\r\n      \r\n      alert(\"All quizzes added successfully!\");\r\n      setBulkData(\"\"); // Clear input after successful upload\r\n    } catch (error) {\r\n      alert(\"Error adding quizzes: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 space-y-8\">\r\n      {/* Topic Input Section */}\r\n      <div className=\"bg-white p-6 shadow-lg rounded-lg w-full max-w-md\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Select Topic</h2>\r\n        <label className=\"block mb-2\">Topic</label>\r\n        <input\r\n          type=\"text\"\r\n          value={topic}\r\n          onChange={(e) => setTopic(e.target.value)}\r\n          className=\"w-full border p-2 rounded\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      {/* Bulk Upload Section */}\r\n      <div className=\"bg-white p-6 shadow-lg rounded-lg w-full max-w-md\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Bulk Upload Quizzes</h2>\r\n        <label className=\"block mb-2\">JSON Script (Array of Quizzes)</label>\r\n        <textarea\r\n          value={bulkData}\r\n          onChange={(e) => setBulkData(e.target.value)}\r\n          placeholder='[{\"question\": \"Sample?\", \"optionA\": \"A\", \"optionB\": \"B\", \"optionC\": \"C\", \"optionD\": \"D\", \"correctAnswer\": \"A\", \"language\": \"English\", \"duration\": \"1:00\", \"passingMarks\": 50}]'\r\n          className=\"w-full border p-2 rounded\"\r\n          rows=\"10\"\r\n          required\r\n        />\r\n        <button\r\n          onClick={handleBulkSubmit}\r\n          className=\"mt-6 bg-green-600 text-white p-2 w-full rounded hover:bg-green-700\"\r\n        >\r\n          Upload Bulk Quizzes\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddQuizPage;\r\n"],"mappings":"8GAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,EAAE,KAAQ,aAAa,CAAE;AAClC,OAASC,UAAU,CAAEC,MAAM,CAAEC,GAAG,CAAEC,MAAM,KAAQ,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErE,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAE;AACxC,KAAM,CAACa,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAAE;AAE9C;AACA,KAAM,CAAAe,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF;AACA,KAAM,CAAAC,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC,CACpC;AACA,KAAM,CAAAM,QAAQ,CAAGf,GAAG,CAACH,EAAE,CAAE,QAAQ,CAAEU,KAAK,CAAC,CAAE;AAE3C,KAAM,CAAAS,cAAc,CAAGJ,OAAO,CAACK,GAAG,CAAEC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IACnCD,IAAI,MACPX,KAAO;AAAA,EACP,CAAC,CAEH;AACA,KAAM,CAAAN,MAAM,CAACc,QAAQ,CAAE,CAAEH,OAAO,CAAEI,cAAe,CAAC,CAAE,CAAEI,KAAK,CAAE,IAAK,CAAC,CAAC,CAEpEC,KAAK,CAAC,iCAAiC,CAAC,CACxCX,WAAW,CAAC,EAAE,CAAC,CAAE;AACnB,CAAE,MAAOY,KAAK,CAAE,CACdD,KAAK,CAAC,wBAAwB,CAAGC,KAAK,CAACC,OAAO,CAAC,CACjD,CACF,CAAC,CAED,mBACElB,KAAA,QAAKmB,SAAS,CAAC,8EAA8E,CAAAC,QAAA,eAE3FpB,KAAA,QAAKmB,SAAS,CAAC,mDAAmD,CAAAC,QAAA,eAChEtB,IAAA,OAAIqB,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAC,cAAY,CAAI,CAAC,cACzDtB,IAAA,UAAOqB,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,OAAK,CAAO,CAAC,cAC3CtB,IAAA,UACEuB,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEpB,KAAM,CACbqB,QAAQ,CAAGC,CAAC,EAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CH,SAAS,CAAC,2BAA2B,CACrCO,QAAQ,MACT,CAAC,EACC,CAAC,cAGN1B,KAAA,QAAKmB,SAAS,CAAC,mDAAmD,CAAAC,QAAA,eAChEtB,IAAA,OAAIqB,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAC,qBAAmB,CAAI,CAAC,cAChEtB,IAAA,UAAOqB,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,gCAA8B,CAAO,CAAC,cACpEtB,IAAA,aACEwB,KAAK,CAAElB,QAAS,CAChBmB,QAAQ,CAAGC,CAAC,EAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7CK,WAAW,CAAC,kNAAgL,CAC5LR,SAAS,CAAC,2BAA2B,CACrCS,IAAI,CAAC,IAAI,CACTF,QAAQ,MACT,CAAC,cACF5B,IAAA,WACE+B,OAAO,CAAEvB,gBAAiB,CAC1Ba,SAAS,CAAC,oEAAoE,CAAAC,QAAA,CAC/E,qBAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAnB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}